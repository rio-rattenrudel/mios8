Recompiling:
------------

-----------------------------------------------------------------

Modifizierte Dateien:

sid_preset_lead.inc
sid_se_d.inc				(.org is original)
cs_menu_print.inc
sid_midi.inc
cs_menu_ms.inc
Makefile
*.asm

-----------------------------------------------------------------

1. neustes gputils installieren (Version 14 unbedingt!)

2. msys 1.10 installieren

3. Umgebungsvariablen ergänzen oder übernehmen:

USER
----
PATH
C:\Program Files (x86)\gputils\bin;C:\Program Files (x86)\SDCC\bin;

MIOS_PATH
/D/MIDISYSTEM/MIDIBOX/svn_mios/trunk


SYSTEM (PATH - nur gucken ob MSYS drin ist, und zwar an ersterer Stelle)
-----------------------------------------------------------------
C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\PROGRA~2\MSYS\1.0\bin;C:\PROGRA~2\Borland\Delphi5\Projects\Bpl;C:\PROGRA~2\Borland\Delphi5\Bin;C:\Perl\bin\;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin


4. check auf make version:
make –version

sollte das kommen:
GNU Make 3.81
Copyright (C) 2006  Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.

This program built for i686-pc-msys


-----------------------------------------------------------------

5.	sid_preset_lead.inc

	"Commodore 64" name instead "Lead Patch" name in EEPROM

	db      'L','e','a','d',' ','P','a','t','c','h',' ',' ',' ',' ',' ',' '

changed to:

	db      'C','o','m','m','o','d','o','r','e',' ','6','4',' ',' ',' ',' '

-----------------------------------------------------------------

6.	*.asm

	add configuration flags

	;; #######################################################
	;; # RIO: CONFIGURATION
	;; #######################################################
#define MONO_DRUM_ENGINE	1
#define LCD_MOP_AL202C		1
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################

-----------------------------------------------------------------

7. 	sid_se_d.inc

	added MONO_DRUM_ENGINE compiler flag for forcing mono drums:
	searched all SID_ENS_CTRL1_MONO and capsuled stereo parts

A. Step

	BRA_IFSET WREG, SID_ENS_CTRL1_MONO, ACCESS, SIDSE_D_Handler_Note_NotR
SIDSE_D_Handler_Note_R
	;; #######################################################
	;; # RIO: SKIP STEREO MODE
	;; #######################################################
#if MONO_DRUM_ENGINE == 0
	SIDSE_D_HANDLER_NOTE_MACRO SIDR_V1_BASE
	SIDSE_D_HANDLER_NOTE_MACRO SIDR_V2_BASE
	SIDSE_D_HANDLER_NOTE_MACRO SIDR_V3_BASE
#endif
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################
SIDSE_D_Handler_Note_NotR

B. Step

	BRA_IFSET WREG, SID_ENS_CTRL1_MONO, ACCESS, SIDSE_D_Handler_Filter_NotR
SIDSE_D_Handler_Filter_R
	;; #######################################################
	;; # RIO: SKIP STEREO MODE
	;; #######################################################
#if MONO_DRUM_ENGINE == 0
	incf	SID_SE_ELEMENT_NUM, F, BANKED
	lfsr	FSR0, SID_PATCH_BUFFER_SHADOW + SID_Ix_M_S2F_BASE
	lfsr	FSR1, SID_MOD_TARG_FIL2_L
	lfsr	FSR2, SIDR_BASE
	call	SIDSE_Filter
#endif
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################
SIDSE_D_Handler_Filter_NotR

C. Step

	BRA_IFSET WREG, SID_ENS_CTRL1_MONO, ACCESS, SIDSE_D_UpdateStatRegs_Mono
SIDSE_D_UpdateStatRegs_Stereo
	;; stereo mode:	most SIDs registers already updated, copy over the static ones
	;; #######################################################
	;; # RIO: SKIP STEREO MODE
	;; #######################################################
#if MONO_DRUM_ENGINE == 0
	SIDSE_D_UPDATESTAT_MACRO SIDR_V1_BASE, SIDR_BASE + SIDx_V1_FRQ_L
	SIDSE_D_UPDATESTAT_MACRO SIDR_V2_BASE, SIDR_BASE + SIDx_V2_FRQ_L
	SIDSE_D_UPDATESTAT_MACRO SIDR_V3_BASE, SIDR_BASE + SIDx_V3_FRQ_L
	rgoto	SIDSE_D_UpdateStatRegs_End
#endif
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################


SIDSE_D_UpdateStatRegs_Mono

D. Step

	BRA_IFSET WREG, SID_ENS_CTRL1_MONO, ACCESS, SIDSE_D_SYNC_LFO_NotR
SIDSE_D_SYNC_LFO_R
	;; #######################################################
	;; # RIO: SKIP STEREO MODE
	;; #######################################################
#if MONO_DRUM_ENGINE == 0
	SIDSE_D_SYNC_LFO_MACRO SID_SE_TRG_EVNT_H, SID_TRG_TARGET_H_L4, SIDR_V1_BASE, SID_LFO7_BASE, SID_LFO8_BASE
	SIDSE_D_SYNC_LFO_MACRO SID_SE_TRG_EVNT_H, SID_TRG_TARGET_H_L5, SIDR_V2_BASE, SID_LFO9_BASE, SID_LFO10_BASE
	SIDSE_D_SYNC_LFO_MACRO SID_SE_TRG_EVNT_H, SID_TRG_TARGET_H_L6, SIDR_V3_BASE, SID_LFO11_BASE, SID_LFO12_BASE
#endif
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################
SIDSE_D_SYNC_LFO_NotR

E. Step

	BRA_IFSET WREG, SID_ENS_CTRL1_MONO, ACCESS, SIDSE_D_SYNC_Note_NotR
SIDSE_D_SYNC_Note_R
	;; #######################################################
	;; # RIO: SKIP STEREO MODE
	;; #######################################################
#if MONO_DRUM_ENGINE == 0
	SIDSE_D_SYNC_NOTE_MACRO SID_SE_TRG_EVNT_L, SID_TRG_TARGET_L_O1R, SIDR_V1_BASE
	SIDSE_D_SYNC_NOTE_MACRO SID_SE_TRG_EVNT_L, SID_TRG_TARGET_L_O2R, SIDR_V2_BASE
	SIDSE_D_SYNC_NOTE_MACRO SID_SE_TRG_EVNT_L, SID_TRG_TARGET_L_O3R, SIDR_V3_BASE
#endif
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################
SIDSE_D_SYNC_Note_NotR

F. Step

	;; number of voices depends on stereo/mono mode
	SET_BSR	SID_LOCAL_ENS
	;; #######################################################
	;; # RIO: SKIP STEREO MODE
	;; #######################################################
#if MONO_DRUM_ENGINE == 0
	movlw	0x60
	btfsc	SID_LOCAL_ENS + SID_ENSx_CTRL1, SID_ENS_CTRL1_MONO, BANKED
#endif
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################
	movlw	0x30

-----------------------------------------------------------------

7. cs_menu_print.inc

	LCD_MOP_AL202C Character Set

	0xcd	- dot has another char code for this LCD type
	0xfa	- 'F' bold F
	0xf8	- 'R' bold R
	0xbc	- '>>'
	0xd8	- '[-]'


	;; #######################################################
	;; # RIO: LCD_MOP_AL202C CHARACTER
	;; #######################################################
#if LCD_MOP_AL202C == 1
	movlw	0xcd	; (dot)
#else
	movlw	0xa5	; (dot)
#endif
	rgoto	CS_MENU_PRINT_SeqSteps_Loop_Cont
CS_MENU_PRINT_SeqSteps_Loop_G0A1
#if LCD_MOP_AL202C == 1
	movlw	0xfa	; 'F' bold F
#else
	movlw	'A'
#endif
	rgoto	CS_MENU_PRINT_SeqSteps_Loop_Cont

CS_MENU_PRINT_SeqSteps_Loop_G1
	BRA_IFSET TMP3, 0, ACCESS, CS_MENU_PRINT_SeqSteps_Loop_G1A1
CS_MENU_PRINT_SeqSteps_Loop_G1A0
#if LCD_MOP_AL202C == 1
	movlw	'*'		; *
#else
	movlw	'*'
#endif
	rgoto	CS_MENU_PRINT_SeqSteps_Loop_Cont
CS_MENU_PRINT_SeqSteps_Loop_G1A1
#if LCD_MOP_AL202C == 1
	movlw	0xf8	; 'R' bold R
#else
	movlw	'S'
#endif
	;; #######################################################
	;; # RIO: END MODIFICATION
	;; #######################################################

-----------------------------------------------------------------

8. Reload Patch via CC#120


sid_midi.inc

..

;; #######################################################
;; # RIO: CC 120 reset/reload preset
;; #######################################################

	;; check if CC 120 (CC#120)
	movlw	0x78
	cpfseq	SID_MIDI_PARAMETER1, BANKED
	rgoto	SID_MIDI_CC_NoInitPreset
	movf	SID_MIDI_PARAMETER2, BANKED
	bz	SID_MIDI_CC_NoInitPreset
SID_MIDI_CC_InitPreset
	goto	CS_MENU_MS_NotifyInitPreset
SID_MIDI_CC_NoInitPreset

;; #######################################################
;; # RIO: END MODIFICATION
;; #######################################################

	;; check if All Notes Off (CC#123 == 0)

..


cs_menu_ms.inc

..

;; #######################################################
;; # RIO: CC 120 reset/reload preset
;; #######################################################

;; --------------------------------------------------------------------------
;;  This function is called to forward a Init Preset event to the control surface
;;  Input:
;;     o midi channel in SID_CURRENT_CHANNEL
;;     o patch number in SID_MIDI_PARAMETER2 of INDF0 lower value
;; --------------------------------------------------------------------------
CS_MENU_MS_NotifyInitPreset
	;; request patch send to SIDs with matching channel number
	SET_BSR	SID_BASE
	clrf	PRODL			; PRODL used as counter
CS_MENU_MS_NotifyInitPresetL
	;; calc pointer to channel entry
	lfsr	FSR0, CS_MENU_SID_M_CHN
	movf	PRODL, W
	addwf	FSR0L, F

	;; check if channel number matches
	movf	INDF0, W
	xorwf	SID_CURRENT_CHANNEL, W, BANKED
	andlw	0x0f
	bnz	CS_MENU_MS_NotifyInitPresetLN

	;; get patch number matches (in this case don't change the patch)
	movlw	(CS_MENU_SID_M_PATCH-CS_MENU_SID_M_CHN) & 0xff
	addwf	FSR0L, F
	andlw	0x7f

	;; copy INDF0 to SID_MIDI_PARAMETER2 and masked 0x7f
	movf	INDF0, W
	andlw	0x7f
	movwf	SID_MIDI_PARAMETER2

	;; store patch number
	movff	SID_MIDI_PARAMETER2, INDF0

	;; skip if patch change already requested
	movlw	(CS_MENU_TX_M_CTR-CS_MENU_SID_M_PATCH) & 0xff
	addwf	FSR0L, F
	BRA_IFSET INDF0, 7, ACCESS, CS_MENU_MS_NotifyInitPresetLN
	;; request patch change
	movlw	0x81
	movwf	INDF0
CS_MENU_MS_NotifyInitPresetLN
	incf	PRODL, F
	BRA_IFCLR PRODL, 2, ACCESS, CS_MENU_MS_NotifyInitPresetL

	return

;; #######################################################
;; # RIO: END MODIFICATION
;; #######################################################

;; --------------------------------------------------------------------------
;;  This function is called to forward a Program Change event to the control surface

..


-----------------------------------------------------------------

9. Makefile

	ignore all *.asm's which does not contain MONO_DRUM_ENGINE define

#all: cleanall setup_6581.hex setup_8580.hex setup_sammich_sid.hex setup_tk.hex setup_tk2.hex setup_mb6582.hex sid_filter_table.hex setup_8580_rio.hex setup_6581_rio.hex
all: cleanall sid_filter_table.hex setup_8580_rio.hex setup_6581_rio.hex
